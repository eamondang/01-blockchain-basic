#+TITLE: Blockchain Basic
#+AUTHOR: Dang Quang Vu
#+EMAIL: eamondang@gmail.com
#+SETUPFILE: ~/theme-readtheorg.setup
#+HTML_HEAD: <style>pre.src{background:#343131;color:white;} </style>

* Program State
[[./images/program-state.png]]
* Overview Networks
[[./images/networks.png]]
+ [[https://www.geeksforgeeks.org/comparison-centralized-decentralized-and-distributed-systems/][Comparison Centralized & Decentralized & Distributed Networks]]
* DApp Architecture
[[./images/blockchain-step.png]]
* [[https://www.youtube.com/watch?v=dfsRQyYXOsQ][Byzantine General's Problem]]
** Image 01
[[./images/bft-0.png]]
** Image 02
[[./images/bft-1.png]]
** Practical Byzantine Fault Tolerance
[[./images/pbft-1.png]]
* Transaction flow
[[./images/transaction.png]]
* [[https://www.youtube.com/watch?v=3AJ3lcm15cY][Consensus]]
** Proof of Work
[[./images/pow.png]]
** Proof of Stake
[[./images/pos.png]]

* Requirements of Blockchain?
+ High Availability
+ Sustainability
+ Irreversibility
+ Transparency
+ Append-only
+ =Consensus=
+ Security
+ Global

* Types of Blockchain
+ Permissionless Blockchain - Public Blockchain
  + Anyone can access to write the data
  + Anyone can read
  + Ex: 99%
+ Permissioned Blockchain - Private Blockchain
  + Participants need permission to accessing the data
  + Readers need permission to read
  + Ex: [[https://www.hyperledger.org/use/fabric][Hyperledger Fabric]], [[https://r3.com/][Corda]]
+ Consortium Blockchain
  + Participants need permission to accessing the data
  + Anyone can read
  + Ex: [[https://ripple.com/][Ripple]]

* What is Blockchain
+ It can be thought of as =ONE BIG COMPUTER= made up of small computers around the world.
+ All these computers (nodes) are connected to one another and have a full copy of the code and data.
+ One of the best ways to understand blockchain is by comparing it with a =traditional client/server architecture=

* Components of Blockchain
** Data Models
+ State Models
+ Account Models
+ Object Models
** Decentralized Models
+ Permissionless Blockchain
+ Permissioned Blockchain
+ Consortium Blockchain
** Network Models
+ Asynchronous
+ Synchronous
+ Partial Synchronous
** =Consensus=
+ PoW/PoS/DPoS
+ Tendermint BFT
+ Doomslug
+ TowerBFT
+ HotStuff
+ Narwhall & bullshark
+ AptosBFT
+ Nominated BFT (GRANDPA & BABE)
+ ...etc
** Cryptographic schemes
+ Hashing
+ Signature
+ Merkle Tree
+ Pub/Priv Key
+ Zero-Knowledge Proofs
* Decentralized Features
** Level of Decentralization
+ Trilemma
  + Security
  + Decentralized
  + Speed
** Security
+ Single Failure Tolerance *(Consensus)*
+ Availability
+ Sybil Attacks
+ 51% Attacks
** Performance
+ Communicate - Broadcast Data
+ Argreement among Participants

* Example
** Install
+ [[https://pureinfotech.com/install-windows-subsystem-linux-2-windows-10/][Install WSL if use Window]]
+ [[https://nodejs.org/en][Install Node.js]] or [[https://github.com/nvm-sh/nvm#installing-and-updating][Node Version Manager]]
+ [[https://www.rust-lang.org/tools/install][Install Rust Lang]]
  #+begin_src sh :results output
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
  #+end_src
+ [[https://docs.near.org/tools/near-cli][Install near-cli]]
  #+begin_src sh :results output
  npm install -g near-cli
  #+end_src

* Cons
+ Very Slow
+ Expensive
+ High Latency
